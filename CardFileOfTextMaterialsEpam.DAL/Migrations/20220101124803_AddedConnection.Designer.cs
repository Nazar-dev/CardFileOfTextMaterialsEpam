// <auto-generated />
using CardFileOfTextMaterialsEpam.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CardFileOfTextMaterialsEpam.DAL.Migrations
{
    [DbContext(typeof(CardFileDbContext))]
    [Migration("20220101124803_AddedConnection")]
    partial class AddedConnection
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CardFileOfTextMaterialsEpam.DAL.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("CategoryId");

                    b.ToTable("EntityBooks");
                });

            modelBuilder.Entity("CardFileOfTextMaterialsEpam.DAL.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EntityCards");
                });

            modelBuilder.Entity("CardFileOfTextMaterialsEpam.DAL.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntityCategories");
                });

            modelBuilder.Entity("CardFileOfTextMaterialsEpam.DAL.Entities.MyPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntityUsers");
                });

            modelBuilder.Entity("CardFileOfTextMaterialsEpam.DAL.Entities.Book", b =>
                {
                    b.HasOne("CardFileOfTextMaterialsEpam.DAL.Entities.Card", "Card")
                        .WithMany("Books")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardFileOfTextMaterialsEpam.DAL.Entities.Category", "Category")
                        .WithMany("BookCollection")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CardFileOfTextMaterialsEpam.DAL.Entities.Card", b =>
                {
                    b.HasOne("CardFileOfTextMaterialsEpam.DAL.Entities.MyPerson", "MyPerson")
                        .WithMany("Cards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MyPerson");
                });

            modelBuilder.Entity("CardFileOfTextMaterialsEpam.DAL.Entities.Card", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("CardFileOfTextMaterialsEpam.DAL.Entities.Category", b =>
                {
                    b.Navigation("BookCollection");
                });

            modelBuilder.Entity("CardFileOfTextMaterialsEpam.DAL.Entities.MyPerson", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
